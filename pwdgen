#!/usr/bin/env python
"""Generate a secure 'Correct-Battery-Horse-Staple' style password"""

from __future__ import print_function
import argparse
from PasswordGenerator import Password


def is_strong_password(password):
    """Determine if a given string can be used as a strong password"""
    import crack
    try:
        crack.VeryFascistCheck(password)
    except ValueError:
        return False
    return True


def get_parsed_args():
    """Parses cli arguments and retuns them as a dict"""
    parser = argparse.ArgumentParser(description='Secure password generator')
    parser.add_argument('--min_words', help='Minimum number of words', default=2, type=int)
    parser.add_argument('--min_length', help='Minimum password length', default=30, type=int)
    parser.add_argument('--max_length', help='Maximum password length', default=100, type=int)
    return vars(parser.parse_args())


def main():
    """The main function"""
    args = get_parsed_args()
    max_len = args['max_length']
    min_len = args['min_length']
    num_words = args['min_words']
    password_obj = Password(num_words, min_len, max_len)
    generated_password = str(password_obj)
    print("'" + generated_password + "' ", end='')
    if is_strong_password(generated_password):
        print("is a strong password")
    else:
        print("is a weak password")


if __name__ == '__main__':
    main()
